Line no 1: TOKEN <INT> Lexeme int found
Line no 1: TOKEN <ID> Lexeme main found
 ScopeTable #1
 10-->< main : ID >

Line no 1: TOKEN <LPAREN> Lexeme ( found
Line no 1: TOKEN <RPAREN> Lexeme ) found
Line no 1: TOKEN <LCURL> Lexeme { found
Line no 2: TOKEN <INT> Lexeme int found
Line no 2: TOKEN <ID> Lexeme a found
 ScopeTable #1
 2-->< { : LCURL >
 7-->< ( : LPAREN >
 8-->< ) : RPAREN >
 9-->< a : ID >
 10-->< main : ID >

Line no 2: TOKEN <COMMA> Lexeme , found
Line no 2: TOKEN <ID> Lexeme b found
 ScopeTable #1
 0-->< , : COMMA >
 2-->< { : LCURL >
 7-->< ( : LPAREN >
 8-->< ) : RPAREN >
 9-->< a : ID >
 10-->< main : ID >< b : ID >

Line no 2: TOKEN <SEMICOLON> Lexeme ; found
Line no 3: TOKEN <ID> Lexeme a found
 ScopeTable #1
 0-->< , : COMMA >
 2-->< { : LCURL >
 4-->< ; : SEMICOLON >
 7-->< ( : LPAREN >
 8-->< ) : RPAREN >
 9-->< a : ID >
 10-->< main : ID >< b : ID >

Line no 3: TOKEN <ASSIGNOP> Lexeme = found
Line no 3: TOKEN <ID> Lexeme a found
 ScopeTable #1
 0-->< , : COMMA >
 2-->< { : LCURL >
 4-->< ; : SEMICOLON >
 6-->< = : ASSIGNOP >
 7-->< ( : LPAREN >
 8-->< ) : RPAREN >
 9-->< a : ID >
 10-->< main : ID >< b : ID >

Line no 3: TOKEN <ADDOP> Lexeme + found
Line no 3: TOKEN <CONST_INT> Lexeme 1 found
 ScopeTable #1
 0-->< , : COMMA >
 2-->< { : LCURL >
 4-->< ; : SEMICOLON >
 5-->< 1 : CONST_INT >
 6-->< = : ASSIGNOP >
 7-->< ( : LPAREN >
 8-->< ) : RPAREN >
 9-->< a : ID >
 10-->< main : ID >< b : ID >< + : ADDOP >

Line no 3: TOKEN <SEMICOLON> Lexeme ; found
Line no 4: TOKEN <CHAR> Lexeme char found
Line no 4: TOKEN <ID> Lexeme ch found
 ScopeTable #1
 0-->< , : COMMA >
 2-->< { : LCURL >
 4-->< ; : SEMICOLON >
 5-->< 1 : CONST_INT >
 6-->< = : ASSIGNOP >
 7-->< ( : LPAREN >
 8-->< ) : RPAREN >
 9-->< a : ID >< ch : ID >
 10-->< main : ID >< b : ID >< + : ADDOP >

Line no 4: TOKEN <ASSIGNOP> Lexeme = found
Line no 4: TOKEN <CONST_CHAR> Lexeme 'a' found
 ScopeTable #1
 0-->< , : COMMA >
 2-->< { : LCURL >
 4-->< ; : SEMICOLON >
 5-->< 1 : CONST_INT >
 6-->< = : ASSIGNOP >< 'a' : CONST_CHAR >
 7-->< ( : LPAREN >
 8-->< ) : RPAREN >
 9-->< a : ID >< ch : ID >
 10-->< main : ID >< b : ID >< + : ADDOP >

Line no 4: TOKEN <SEMICOLON> Lexeme ; found
Line no 5: TOKEN <ID> Lexeme ch found
 ScopeTable #1
 0-->< , : COMMA >
 2-->< { : LCURL >
 4-->< ; : SEMICOLON >
 5-->< 1 : CONST_INT >
 6-->< = : ASSIGNOP >< 'a' : CONST_CHAR >
 7-->< ( : LPAREN >
 8-->< ) : RPAREN >
 9-->< a : ID >< ch : ID >
 10-->< main : ID >< b : ID >< + : ADDOP >

Line no 5: TOKEN <ASSIGNOP> Lexeme = found
Line no 5: TOKEN <CONST_CHAR> Lexeme '\t' found
 ScopeTable #1
 0-->< , : COMMA >
 2-->< { : LCURL >
 4-->< ; : SEMICOLON >
 5-->< 1 : CONST_INT >
 6-->< = : ASSIGNOP >< 'a' : CONST_CHAR >
 7-->< ( : LPAREN >< '\t' : CONST_CHAR >
 8-->< ) : RPAREN >
 9-->< a : ID >< ch : ID >
 10-->< main : ID >< b : ID >< + : ADDOP >

Line no 5: TOKEN <SEMICOLON> Lexeme ; found
Line no 6: TOKEN <CHAR> Lexeme char found
Line no 6: TOKEN <ID> Lexeme c found
 ScopeTable #1
 0-->< , : COMMA >< c : ID >
 2-->< { : LCURL >
 4-->< ; : SEMICOLON >
 5-->< 1 : CONST_INT >
 6-->< = : ASSIGNOP >< 'a' : CONST_CHAR >
 7-->< ( : LPAREN >< '\t' : CONST_CHAR >
 8-->< ) : RPAREN >
 9-->< a : ID >< ch : ID >
 10-->< main : ID >< b : ID >< + : ADDOP >

Line no 6: TOKEN <LTHIRD> Lexeme [ found
Line no 6: TOKEN <RTHIRD> Lexeme ] found
Line no 6: TOKEN <ASSIGNOP> Lexeme = found
Line no 6: TOKEN <STRING> Lexeme "ab\td"
Line no 6: TOKEN <SEMICOLON> Lexeme ; found
Line no 7: TOKEN <ID> Lexeme printf found
 ScopeTable #1
 0-->< , : COMMA >< c : ID >
 2-->< { : LCURL >
 3-->< [ : LTHIRD >
 4-->< ; : SEMICOLON >
 5-->< 1 : CONST_INT >< ] : RTHIRD >
 6-->< = : ASSIGNOP >< 'a' : CONST_CHAR >
 7-->< ( : LPAREN >< '\t' : CONST_CHAR >
 8-->< ) : RPAREN >
 9-->< a : ID >< ch : ID >
 10-->< main : ID >< b : ID >< + : ADDOP >< printf : ID >

Line no 7: TOKEN <LPAREN> Lexeme ( found
Line no 7: TOKEN <STRING> Lexeme "abc\
def\
ghi"
Line no 9: TOKEN <RPAREN> Lexeme ) found
Line no 9: TOKEN <SEMICOLON> Lexeme ; found
Line no. 10: TOKEN <COMMENT> lexeme // a comment found
Line no. 11: TOKEN <COMMENT> lexeme /** another
*** comment ***/ found
Line no 13: TOKEN <RETURN> Lexeme return found
Line no 13: TOKEN <CONST_INT> Lexeme 0 found
 ScopeTable #1
 0-->< , : COMMA >< c : ID >
 2-->< { : LCURL >
 3-->< [ : LTHIRD >
 4-->< ; : SEMICOLON >< 0 : CONST_INT >
 5-->< 1 : CONST_INT >< ] : RTHIRD >
 6-->< = : ASSIGNOP >< 'a' : CONST_CHAR >
 7-->< ( : LPAREN >< '\t' : CONST_CHAR >
 8-->< ) : RPAREN >
 9-->< a : ID >< ch : ID >
 10-->< main : ID >< b : ID >< + : ADDOP >< printf : ID >

Line no 13: TOKEN <SEMICOLON> Lexeme ; found
Line no 14: TOKEN <RCURL> Lexeme } found

Total Lines : 14
Total Errors : 0
